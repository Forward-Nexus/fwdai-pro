{
  "description": "Recommended MCP servers for FWD PRO v2.1",
  "instructions": "Copy these configurations into your Cursor settings (Tools & MCP â†’ New MCP Server)",
  "note": "Replace <your-token> and <your-api-key> with your actual credentials",
  
  "mcpServers": {
    "shadcn-ui": {
      "description": "Browse and add shadcn/ui components (Ada uses this!)",
      "priority": "HIGH",
      "useCase": "React/Next.js UI development",
      "command": "npx",
      "args": [
        "@jplsnice/shadcn-ui-mcp-server"
      ]
    },
    
    "brave-search": {
      "description": "Web search for research verification (v2.1 requirement!)",
      "priority": "HIGH",
      "useCase": "Research integrity, fact-checking, citations",
      "apiKeyRequired": true,
      "getApiKey": "https://brave.com/search/api/",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-brave-search"
      ],
      "env": {
        "BRAVE_API_KEY": "<your-api-key>"
      }
    },
    
    "github": {
      "description": "Create PRs, manage issues, code review",
      "priority": "MEDIUM",
      "useCase": "Team development, project management",
      "tokenRequired": true,
      "getToken": "https://github.com/settings/tokens",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "<your-token>"
      }
    },
    
    "filesystem": {
      "description": "Read/write files, search codebase",
      "priority": "HIGH",
      "useCase": "File operations (Built-in to Cursor)",
      "note": "This is already active in Cursor - no setup needed!"
    },
    
    "postgres": {
      "description": "Query and manage PostgreSQL databases",
      "priority": "MEDIUM",
      "useCase": "Database development, data analysis",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-postgres",
        "postgresql://localhost/mydb"
      ],
      "note": "Replace 'postgresql://localhost/mydb' with your database URL"
    },
    
    "slack": {
      "description": "Send messages, manage channels",
      "priority": "LOW",
      "useCase": "Team notifications, collaboration",
      "tokenRequired": true,
      "getToken": "https://api.slack.com/apps",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-slack"
      ],
      "env": {
        "SLACK_BOT_TOKEN": "<your-token>",
        "SLACK_TEAM_ID": "<your-team-id>"
      }
    },
    
    "gdrive": {
      "description": "Access Google Drive files",
      "priority": "LOW",
      "useCase": "Collaborative document management",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-gdrive"
      ]
    },
    
    "mongodb": {
      "description": "Query and manage MongoDB databases",
      "priority": "MEDIUM",
      "useCase": "NoSQL database development",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-mongodb",
        "mongodb://localhost:27017"
      ],
      "note": "Replace with your MongoDB connection string"
    },
    
    "mysql": {
      "description": "Query and manage MySQL databases",
      "priority": "MEDIUM",
      "useCase": "SQL database development",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-mysql",
        "mysql://user:password@localhost:3306/database"
      ],
      "note": "Replace with your MySQL connection string"
    }
  },
  
  "installationGuide": {
    "step1": "Open Cursor Settings (Cmd+, or Ctrl+,)",
    "step2": "Navigate to 'Tools & MCP'",
    "step3": "Click 'New MCP Server'",
    "step4": "Paste the configuration from above",
    "step5": "Replace any <your-token> or <your-api-key> with real credentials",
    "step6": "Save and restart Cursor"
  },
  
  "priorityGuide": {
    "HIGH": "Install these first - most useful for FWD PRO workflows",
    "MEDIUM": "Install when you need specific functionality",
    "LOW": "Optional - install if you have specific team/workflow needs"
  },
  
  "examples": {
    "example1_shadcn": {
      "description": "How Ada uses shadcn-ui MCP",
      "scenario": "Ada: 'I'm implementing the dashboard. I'll browse shadcn components and add the Card, Chart, and DataTable components.'",
      "benefit": "No context switching - Ada finds components directly in Cursor"
    },
    
    "example2_brave_search": {
      "description": "How Lyna uses Brave Search for research integrity",
      "scenario": "Lyna: 'I need to verify the claim that mental health apps have 3.9% retention. Let me search...' [Uses Brave Search MCP] 'Found: App Annie report confirms 3.9% (source: https://...)'",
      "benefit": "Real citations, verified research, credibility maintained"
    },
    
    "example3_github": {
      "description": "How Ada uses GitHub MCP for PRs",
      "scenario": "Ada: 'Feature complete! Creating PR for review...' [Uses GitHub MCP] 'PR #42 created: Add authentication system'",
      "benefit": "Automated PR creation, issue management"
    }
  },
  
  "troubleshooting": {
    "mcp_not_showing": "Restart Cursor after adding MCP configuration",
    "api_key_error": "Double-check your API key is correct and has proper permissions",
    "connection_failed": "Verify the service URL/connection string is correct",
    "slow_performance": "Some MCPs (especially web search) may have rate limits"
  },
  
  "securityNotes": {
    "important": [
      "NEVER commit API keys to git repositories",
      "Use environment variables for sensitive credentials",
      "Rotate API keys periodically",
      "Review MCP permissions before granting access",
      "Use separate API keys for development vs. production"
    ]
  }
}

